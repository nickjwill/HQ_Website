<div id="main-navigation-container" class="clearfix">
  <div id="main-navigation">
    <ul class="navigation-menu">
      <li><a href="">Home</a></li>
      <li>
        <a href="">Menu Item 1</a>
        <ul class="navigation-sub-menu">
          <li><a href="">Sub Menu Item 1</a></li>
          <li><a href="">Sub Menu Item 2</a></li>
          <li><a href="">Sub Menu Item 3</a></li>
        </ul>
      </li> 
    </ul>
  </div><!-- main-navigation -->
</div><!-- main-navigation-container -->

<!-- Google Banner AD -->
<div id='adsense1'><script async src='//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js'></script>
<!-- Bloque adaptable comodin -->
<ins class='adsbygoogle'
     style='display:block'
     data-ad-client='ca-pub-1186760826623337'
     data-ad-slot='8157470171'
     data-ad-format='auto'></ins>
<script>
(adsbygoogle = window.adsbygoogle || []).push({});
</script></div>

<br>
<br>
<br>
<br>
<br>
<br>

<!-- Calendar - - - - - - - - - - - - - - - - - - -->
        <div class="wrapper">
            <div id="calendarContainer"></div>
            <div id="eventsContainer" style="margin-left: 8px;"></div>
        </div>
        
        <script src="example.js"></script>
        <script>
            calendar = new Calendar("calendarContainer", "small", [ "Sunday", "3" ], [ "#ffc107", "#ffa000", "#ffffff", "#ffecb3" ]); // calendar container, size, array of first day of the week, and the number of letters for the week days ( max of 3 min of 1 ), colors... i would suggest using materialpalette.com
            organizer = new Organizer("eventsContainer", calendar); // organizer container and the calendar object to associate it to
            currentDay = calendar.date.getDate(); // used this in order to make anyday today depending on the current today
            // my best way of organizing data, maybe that can be the outcome of joining multiple tables in the database and then parsing them in such a manner, easier for the person to push use a date and the events of it
            data = {
            years: [
                {
                int: 1999,
                months: [
                    {
                    int: 4,
                    days: [
                        {
                        int: 28,
                        events: [
                        ]
                        }
                    ]
                    }
                ]
                },
                {
                int: (new Date().getFullYear()),
                months: [
                    {
                    int: (new Date().getMonth() + 1),
                    days: [
                        {
                        int: (new Date().getDate()),
                        events: [
                        
                            {
                            startTime: "Afternoon",
                            endTime: "Trivia",
                            mTime: "pm",
                            text: "Afternoon"
                            },
                            {
                            startTime: "6:00",
                            endTime: "6:15",
                            mTime: "pm",
                            text: " Evening Trivia"
                            }
                        ]
                        }
                    ]
                    }
                ]
                }
            ]
            };
            showEvents(); // list events of today, when calendar loads
            callback = function () {
            showEvents();
            }
            organizer.setOnClickListener('day-slider', callback, callback); // first callback is for the back slider, second is for the next slider
            organizer.setOnClickListener('days-blocks', callback, null); // only needed callback is the first, no back or next, last parameter is ignored
            organizer.setOnClickListener('month-slider', callback, callback); // first callback is for the back slider, second is for the next slider
            organizer.setOnClickListener('year-slider', callback, callback); // first callback is for the back slider, second is for the next slider
            // a way to show the events of a date after retrieving the data from the database
            function showEvents() {
            theYear = -1, theMonth = -1, theDay = -1;
            for (i = 0; i < data.years.length; i++) {
                if (calendar.date.getFullYear() == data.years[i].int) {
                theYear = i;
                break;
                }
            }
            if (theYear == -1) return;
            for (i = 0; i < data.years[theYear].months.length; i++) {
                if ((calendar.date.getMonth() + 1) == data.years[theYear].months[i].int) {
                theMonth = i;
                break;
                }
            }
            if (theMonth == -1) return;
            for (i = 0; i < data.years[theYear].months[theMonth].days.length; i++) {
                if (calendar.date.getDate() == data.years[theYear].months[theMonth].days[i].int) {
                theDay = i;
                break;
                }
            }
            if (theDay == -1) return;
            theEvents = data.years[theYear].months[theMonth].days[theDay].events;  
            organizer.list(theEvents);
            }
        </script>
